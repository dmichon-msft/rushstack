{
  // THIS SHARED JEST CONFIGURATION FILE IS INTENDED TO BE REFERENCED BY THE JEST CONFIGURATION IN
  // CONSUMING PACKAGE AND REQUIRES PRESET-RELATIVE MODULE RESOLUTION TO BE ENABLED. IF YOU HAVE
  // DISABLED THIS FEATURE YOU MUST CREATE YOUR OWN JEST CONFIGURATION

  // By default, don't hide console output
  "silent": false,

  // In order for HeftJestReporter to receive console.log() events, we must set verbose=false
  "verbose": false,

  // "Adding '<rootDir>/src' here enables src/__mocks__ to be used for mocking Node.js system modules
  "roots": ["<rootDir>/src"],

  "testURL": "http://localhost/",

  "testMatch": ["<rootDir>/src/**/*.test.{ts,tsx}"],
  "testPathIgnorePatterns": ["/node_modules/"],

  // Code coverage tracking is disabled by default; set this to true to enable it
  "collectCoverage": false,

  "maxWorkers": 1,

  "coverageDirectory": "<rootDir>/temp/coverage",

  "collectCoverageFrom": [
    "src/**/*.{ts,tsx}",
    "!src/**/*.d.ts",
    "!src/**/*.test.{ts,tsx}",
    "!src/**/test/**",
    "!src/**/__tests__/**",
    "!src/**/__fixtures__/**",
    "!src/**/__mocks__/**"
  ],
  "coveragePathIgnorePatterns": ["/node_modules/"],

  "transformIgnorePatterns": [],

  // jest-identity-mock-transform returns a proxy for exported key/value pairs, where Webpack would return a module
  // jest-string-mock-transform returns the filename, where Webpack would return a URL
  // When using the heft-jest-plugin, these will be replaced with the resolved module location
  "transform": {
    "\\.(ts|tsx)$": "../lib/exports/jest-build-transform.js",

    "\\.(css|sass|scss)$": "../lib/exports/jest-identity-mock-transform.js",

    "\\.(aac|eot|gif|jpeg|jpg|m4a|mp3|mp4|oga|otf|png|svg|ttf|wav|webm|webp|woff|woff2)$": "../lib/exports/jest-string-mock-transform.js"
  },

  // The modulePathIgnorePatterns below accepts these sorts of paths:
  //   - <rootDir>/src
  //   - <rootDir>/src/file.ts
  // ...and ignores anything else under <rootDir>
  "modulePathIgnorePatterns": [],

  // Prefer .cjs to .js to catch explicit commonjs output. Optimize for local files, which will be .ts or .tsx
  "moduleFileExtensions": ["ts", "tsx", "cjs", "js", "json", "node"],

  // When using the heft-jest-plugin, these will be replaced with the resolved module location
  "setupFiles": ["../lib/exports/jest-global-setup.js"],

  // When using the heft-jest-plugin, these will be replaced with the resolved module location
  "resolver": "../lib/exports/jest-improved-resolver.js"
}
